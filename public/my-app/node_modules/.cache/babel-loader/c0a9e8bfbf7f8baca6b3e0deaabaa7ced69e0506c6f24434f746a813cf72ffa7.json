{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adity\\\\Desktop\\\\Project\\\\my-app\\\\src\\\\components\\\\Camerageter.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlantDiseaseDetection = () => {\n  _s();\n  const diseases = [{\n    plant: \"Apple\",\n    name: \"Apple Scab\",\n    cure: \"Apply fungicides like captan or myclobutanil.\"\n  }, {\n    plant: \"Apple\",\n    name: \"Apple Black Rot\",\n    cure: \"Prune infected areas and apply fungicides.\"\n  }, {\n    plant: \"Apple\",\n    name: \"Cedar Apple Rust\",\n    cure: \"Remove nearby juniper hosts and apply fungicides.\"\n  }, {\n    plant: \"Cherry\",\n    name: \"Cherry Powdery Mildew\",\n    cure: \"Use sulfur-based fungicides and ensure good air circulation.\"\n  }, {\n    plant: \"Corn\",\n    name: \"Cercospora Leaf Spot (Gray Leaf Spot)\",\n    cure: \"Rotate crops and apply resistant hybrids.\"\n  }, {\n    plant: \"Corn\",\n    name: \"Common Rust\",\n    cure: \"Use resistant varieties and apply fungicides if needed.\"\n  }, {\n    plant: \"Corn\",\n    name: \"Northern Leaf Blight\",\n    cure: \"Plant resistant hybrids and use fungicides.\"\n  }, {\n    plant: \"Grape\",\n    name: \"Black Rot\",\n    cure: \"Prune and remove infected parts, apply fungicides.\"\n  }, {\n    plant: \"Grape\",\n    name: \"Black Measles\",\n    cure: \"Implement good cultural practices and use fungicides.\"\n  }, {\n    plant: \"Grape\",\n    name: \"Leaf Blight\",\n    cure: \"Apply protective fungicides and practice proper vineyard hygiene.\"\n  }, {\n    plant: \"Orange\",\n    name: \"Citrus Greening\",\n    cure: \"Use disease-free trees and manage psyllid populations.\"\n  }, {\n    plant: \"Orange\",\n    name: \"Orange with Citrus Greening\",\n    cure: \"Use disease-free trees and manage psyllid populations.\"\n  }, {\n    plant: \"Peach\",\n    name: \"Bacterial Spot\",\n    cure: \"Apply copper-based bactericides and select resistant varieties.\"\n  }, {\n    plant: \"Pepper Bell\",\n    name: \"Bacterial Spot\",\n    cure: \"Use resistant varieties and copper-based bactericides.\"\n  }, {\n    plant: \"Potato\",\n    name: \"Early Blight\",\n    cure: \"Apply fungicides and practice crop rotation.\"\n  }, {\n    plant: \"Potato\",\n    name: \"Late Blight\",\n    cure: \"Use resistant varieties and fungicides.\"\n  }, {\n    plant: \"Squash\",\n    name: \"Powdery Mildew\",\n    cure: \"Apply sulfur-based fungicides and ensure proper spacing.\"\n  }, {\n    plant: \"Strawberry\",\n    name: \"Leaf Scorch\",\n    cure: \"Remove infected leaves and apply fungicides.\"\n  }, {\n    plant: \"Tomato\",\n    name: \"Bell pepper with Bacterial Spot\",\n    cure: \"Use copper-based bactericides and resistant varieties.\"\n  }, {\n    plant: \"Tomato\",\n    name: \"Early Blight\",\n    cure: \"Apply fungicides and use resistant varieties.\"\n  }, {\n    plant: \"Tomato\",\n    name: \"Late Blight\",\n    cure: \"Use resistant varieties and fungicides.\"\n  }, {\n    plant: \"Tomato\",\n    name: \"Leaf Mold\",\n    cure: \"Improve ventilation and apply fungicides.\"\n  }, {\n    plant: \"Tomato\",\n    name: \"Septoria Leaf Spot\",\n    cure: \"Remove affected leaves and use fungicides.\"\n  }, {\n    plant: \"Tomato\",\n    name: \"Spider Mites (Two-Spotted Spider Mite)\",\n    cure: \"Use miticides or insecticidal soap.\"\n  }, {\n    plant: \"Tomato\",\n    name: \"Target Spot\",\n    cure: \"Apply fungicides and improve air circulation.\"\n  }, {\n    plant: \"Tomato\",\n    name: \"Mosaic Virus\",\n    cure: \"Remove infected plants and sanitize tools.\"\n  }, {\n    plant: \"Tomato\",\n    name: \"Yellow Leaf Curl Virus\",\n    cure: \"Use resistant varieties and control whiteflies.\"\n  }];\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [result, setResult] = useState('');\n  const [result1, setResult1] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      videoRef.current.srcObject = stream;\n    }).catch(err => {\n      console.error(\"Error accessing the camera: \", err);\n      alert(\"Could not access the camera. Please allow camera permissions.\");\n    });\n  }, []);\n  const captureImage = () => {\n    const context = canvasRef.current.getContext('2d');\n    context.drawImage(videoRef.current, 0, 0, 320, 240);\n  };\n  const uploadImage = () => {\n    setLoading(true);\n    canvasRef.current.toBlob(blob => {\n      const formData = new FormData();\n      formData.append('file', blob, 'plant_image.jpg');\n      fetch('http://10.12.37.12:8000/predict/', {\n        method: 'POST',\n        body: formData\n      }).then(response => response.json()).then(data => {\n        setLoading(false);\n        if (data.prediction && data.prediction.length > 0) {\n          const {\n            label,\n            score\n          } = data.prediction[0];\n          setResult(`Prediction: ${label} | Accuracy: ${score}`);\n          const diseaseInfo = diseases.find(disease => disease.name === label);\n          if (diseaseInfo) {\n            console.log(`Disease: ${diseaseInfo.name}, Cure: ${diseaseInfo.cure}`);\n            setResult1(diseaseInfo.cure);\n          } else {\n            console.log(\"Disease not found in the list.\");\n            setResult1(\"\");\n          }\n        } else {\n          setResult(\"Prediction is not defined\");\n        }\n      }).catch(error => {\n        setLoading(false);\n        console.error(\"Error uploading the image or in prediction: \", error);\n        setResult(\"Please retake the picture\");\n      });\n    }, 'image/jpeg');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"640px\",\n      width: \"100%\",\n      background: \"linear-gradient(360deg,#208420,white)\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '100px',\n        marginLeft: '280px',\n        borderRadius: \"8px\",\n        paddingTop: \"20px\",\n        width: \"800px\",\n        backgroundColor: \"#E4F1E8\",\n        border: \"2px solid black\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Plant Disease Detection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        width: \"320\",\n        height: \"240\",\n        autoPlay: true,\n        style: {\n          marginTop: '20px',\n          border: \"2px solid green\",\n          marginRight: \"5px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: \"320\",\n        height: \"240\",\n        style: {\n          marginTop: '20px',\n          border: \"2px solid green\",\n          marginLeft: \"5px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 143\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: captureImage,\n        style: {\n          padding: '10px 20px',\n          margin: '10px',\n          fontSize: '16px',\n          cursor: 'pointer',\n          border: \"none\",\n          backgroundColor: \"#C6F5B5\",\n          borderRadius: \"8px\"\n        },\n        children: \"Capture Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: uploadImage,\n        style: {\n          padding: '10px 20px',\n          margin: '10px',\n          fontSize: '16px',\n          cursor: 'pointer',\n          border: \"none\",\n          backgroundColor: \"#C6F5B5\",\n          borderRadius: \"8px\"\n        },\n        children: \"Upload and Detect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"loading\",\n        style: {\n          marginTop: '20px'\n        },\n        children: \"Processing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"40px\",\n        width: \"600px\",\n        backgroundColor: \"#E4F1E8\",\n        borderRadius: \"20px\",\n        border: \"2px solid black\",\n        marginTop: \"10px\",\n        marginLeft: \"380px\",\n        paddingTop: \"6px\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"result\",\n        style: {\n          fontWeight: 'bold'\n        },\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {},\n        children: [\"Cure:\", result1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(PlantDiseaseDetection, \"BD3BrS99wBnT4HzfCxl88HqQSJ8=\");\n_c = PlantDiseaseDetection;\nexport default PlantDiseaseDetection;\nvar _c;\n$RefreshReg$(_c, \"PlantDiseaseDetection\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","PlantDiseaseDetection","_s","diseases","plant","name","cure","videoRef","canvasRef","result","setResult","result1","setResult1","loading","setLoading","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","catch","err","console","error","alert","captureImage","context","getContext","drawImage","uploadImage","toBlob","blob","formData","FormData","append","fetch","method","body","response","json","data","prediction","length","label","score","diseaseInfo","find","disease","log","style","height","width","background","children","textAlign","marginTop","marginLeft","borderRadius","paddingTop","backgroundColor","border","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","marginRight","onClick","padding","margin","fontSize","cursor","id","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/adity/Desktop/Project/my-app/src/components/Camerageter.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\n\r\nconst PlantDiseaseDetection = () => {\r\n  const diseases = [\r\n    { plant: \"Apple\", name: \"Apple Scab\", cure: \"Apply fungicides like captan or myclobutanil.\" },\r\n    { plant: \"Apple\", name: \"Apple Black Rot\", cure: \"Prune infected areas and apply fungicides.\" },\r\n    { plant: \"Apple\", name: \"Cedar Apple Rust\", cure: \"Remove nearby juniper hosts and apply fungicides.\" },\r\n    { plant: \"Cherry\", name: \"Cherry Powdery Mildew\", cure: \"Use sulfur-based fungicides and ensure good air circulation.\" },\r\n    { plant: \"Corn\", name: \"Cercospora Leaf Spot (Gray Leaf Spot)\", cure: \"Rotate crops and apply resistant hybrids.\" },\r\n    { plant: \"Corn\", name: \"Common Rust\", cure: \"Use resistant varieties and apply fungicides if needed.\" },\r\n    { plant: \"Corn\", name: \"Northern Leaf Blight\", cure: \"Plant resistant hybrids and use fungicides.\" },\r\n    { plant: \"Grape\", name: \"Black Rot\", cure: \"Prune and remove infected parts, apply fungicides.\" },\r\n    { plant: \"Grape\", name: \"Black Measles\", cure: \"Implement good cultural practices and use fungicides.\" },\r\n    { plant: \"Grape\", name: \"Leaf Blight\", cure: \"Apply protective fungicides and practice proper vineyard hygiene.\" },\r\n    { plant: \"Orange\", name: \"Citrus Greening\", cure: \"Use disease-free trees and manage psyllid populations.\" },\r\n    { plant: \"Orange\", name: \"Orange with Citrus Greening\", cure: \"Use disease-free trees and manage psyllid populations.\" },\r\n    { plant: \"Peach\", name: \"Bacterial Spot\", cure: \"Apply copper-based bactericides and select resistant varieties.\" },\r\n    { plant: \"Pepper Bell\", name: \"Bacterial Spot\", cure: \"Use resistant varieties and copper-based bactericides.\" },\r\n    { plant: \"Potato\", name: \"Early Blight\", cure: \"Apply fungicides and practice crop rotation.\" },\r\n    { plant: \"Potato\", name: \"Late Blight\", cure: \"Use resistant varieties and fungicides.\" },\r\n    { plant: \"Squash\", name: \"Powdery Mildew\", cure: \"Apply sulfur-based fungicides and ensure proper spacing.\" },\r\n    { plant: \"Strawberry\", name: \"Leaf Scorch\", cure: \"Remove infected leaves and apply fungicides.\" },\r\n    { plant: \"Tomato\", name: \"Bell pepper with Bacterial Spot\", cure: \"Use copper-based bactericides and resistant varieties.\" },\r\n    { plant: \"Tomato\", name: \"Early Blight\", cure: \"Apply fungicides and use resistant varieties.\" },\r\n    { plant: \"Tomato\", name: \"Late Blight\", cure: \"Use resistant varieties and fungicides.\" },\r\n    { plant: \"Tomato\", name: \"Leaf Mold\", cure: \"Improve ventilation and apply fungicides.\" },\r\n    { plant: \"Tomato\", name: \"Septoria Leaf Spot\", cure: \"Remove affected leaves and use fungicides.\" },\r\n    { plant: \"Tomato\", name: \"Spider Mites (Two-Spotted Spider Mite)\", cure: \"Use miticides or insecticidal soap.\" },\r\n    { plant: \"Tomato\", name: \"Target Spot\", cure: \"Apply fungicides and improve air circulation.\" },\r\n    { plant: \"Tomato\", name: \"Mosaic Virus\", cure: \"Remove infected plants and sanitize tools.\" },\r\n    { plant: \"Tomato\", name: \"Yellow Leaf Curl Virus\", cure: \"Use resistant varieties and control whiteflies.\" }\r\n  ];\r\n\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [result, setResult] = useState('');\r\n  const [result1, setResult1] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices.getUserMedia({ video: true })\r\n      .then((stream) => {\r\n        videoRef.current.srcObject = stream;\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error accessing the camera: \", err);\r\n        alert(\"Could not access the camera. Please allow camera permissions.\");\r\n      });\r\n  }, []);\r\n\r\n  const captureImage = () => {\r\n    const context = canvasRef.current.getContext('2d');\r\n    context.drawImage(videoRef.current, 0, 0, 320, 240);\r\n  };\r\n\r\n  const uploadImage = () => {\r\n    setLoading(true);\r\n    canvasRef.current.toBlob((blob) => {\r\n      const formData = new FormData();\r\n      formData.append('file', blob, 'plant_image.jpg');\r\n\r\n      fetch('http://10.12.37.12:8000/predict/', {\r\n        method: 'POST',\r\n        body: formData\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setLoading(false);\r\n          if (data.prediction && data.prediction.length > 0) {\r\n            const { label, score } = data.prediction[0];\r\n            setResult(`Prediction: ${label} | Accuracy: ${score}`);\r\n            const diseaseInfo = diseases.find(disease => disease.name === label);\r\n            if (diseaseInfo) {\r\n              console.log(`Disease: ${diseaseInfo.name}, Cure: ${diseaseInfo.cure}`);\r\n              setResult1(diseaseInfo.cure);\r\n            } else {\r\n              console.log(\"Disease not found in the list.\");\r\n              setResult1(\"\");\r\n            }\r\n          } else {\r\n            setResult(\"Prediction is not defined\");\r\n          }\r\n        })\r\n        .catch(error => {\r\n          setLoading(false);\r\n          console.error(\"Error uploading the image or in prediction: \", error);\r\n          setResult(\"Please retake the picture\");\r\n        });\r\n    }, 'image/jpeg');\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"640px\", width: \"100%\", background: \"linear-gradient(360deg,#208420,white)\" }}>\r\n      <div style={{ textAlign: 'center', marginTop: '100px', marginLeft: '280px', borderRadius: \"8px\", paddingTop: \"20px\", width: \"800px\", backgroundColor: \"#E4F1E8\", border: \"2px solid black\" }}>\r\n        <h1>Plant Disease Detection</h1>\r\n        <video ref={videoRef} width=\"320\" height=\"240\" autoPlay style={{ marginTop: '20px', border: \"2px solid green\", marginRight: \"5px\" }}></video>\r\n        <canvas ref={canvasRef} width=\"320\" height=\"240\" style={{ marginTop: '20px', border: \"2px solid green\", marginLeft: \"5px\" }}></canvas><br />\r\n        <button onClick={captureImage} style={{ padding: '10px 20px', margin: '10px', fontSize: '16px', cursor: 'pointer', border: \"none\", backgroundColor: \"#C6F5B5\", borderRadius: \"8px\" }}>Capture Image</button>\r\n        <button onClick={uploadImage} style={{ padding: '10px 20px', margin: '10px', fontSize: '16px', cursor: 'pointer', border: \"none\", backgroundColor: \"#C6F5B5\", borderRadius: \"8px\" }}>Upload and Detect</button>\r\n        {loading && <div id=\"loading\" style={{ marginTop: '20px' }}>Processing...</div>}\r\n      </div>\r\n      <div style={{ height: \"40px\", width: \"600px\", backgroundColor: \"#E4F1E8\", borderRadius: \"20px\", border: \"2px solid black\", marginTop: \"10px\", marginLeft: \"380px\", paddingTop: \"6px\", textAlign: \"center\" }}>\r\n        <div id=\"result\" style={{ fontWeight: 'bold' }}>{result}</div>\r\n        <div style={{}}>Cure:{result1}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlantDiseaseDetection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}