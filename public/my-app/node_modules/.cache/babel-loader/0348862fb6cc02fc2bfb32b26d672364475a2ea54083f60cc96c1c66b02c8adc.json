{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adity\\\\Desktop\\\\Project\\\\my-app\\\\src\\\\components\\\\Camerageter.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlantDiseaseDetection = () => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      videoRef.current.srcObject = stream;\n    }).catch(err => {\n      console.error(\"Error accessing the camera: \", err);\n      alert(\"Could not access the camera. Please allow camera permissions.\");\n    });\n  }, []);\n  const captureImage = () => {\n    const context = canvasRef.current.getContext('2d');\n    context.drawImage(videoRef.current, 0, 0, 320, 240);\n  };\n  const uploadImage = () => {\n    setLoading(true);\n    const dataUrl = canvasRef.current.toDataURL('image/jpeg');\n    fetch(dataUrl).then(res => res.blob()).then(blob => {\n      const formData = new FormData();\n      formData.append('file', blob, 'plant_image.jpg');\n      fetch('http://10.12.37.12:8000/predict/', {\n        method: 'POST',\n        body: formData\n      }).then(response => response.json()).then(data => {\n        setLoading(false);\n        setResult(`Prediction: ${JSON.stringify(data.prediction, null, 2)}`);\n      }).catch(error => {\n        setLoading(false);\n        console.error(\"Error uploading the image or in prediction: \", error);\n        setResult(\"An error occurred during image upload or prediction.\");\n      });\n    }).catch(error => {\n      setLoading(false);\n      console.error(\"Error converting canvas to Blob: \", error);\n      setResult(\"An error occurred during image processing.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '100px',\n      marginLeft: '300px',\n      borderRadius: \"8px\",\n      paddingTop: \"20px\",\n      width: \"800px\",\n      backgroundColor: \"#E4F1E8\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Plant Disease Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      width: \"320\",\n      height: \"240\",\n      autoPlay: true,\n      style: {\n        border: '1px solid #ddd',\n        marginTop: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: \"320\",\n      height: \"240\",\n      style: {\n        border: '1px solid #ddd',\n        margin: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 124\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: captureImage,\n      style: {\n        padding: '10px 20px',\n        margin: '10px',\n        fontSize: '16px',\n        cursor: 'pointer'\n      },\n      children: \"Capture Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadImage,\n      style: {\n        padding: '10px 20px',\n        margin: '10px',\n        fontSize: '16px',\n        cursor: 'pointer'\n      },\n      children: \"Upload and Detect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"loading\",\n      style: {\n        marginTop: '20px'\n      },\n      children: \"Processing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"result\",\n      style: {\n        marginTop: '20px',\n        fontWeight: 'bold'\n      },\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(PlantDiseaseDetection, \"FIbSNzvP+MY3/3TrvLgY2yKRSSw=\");\n_c = PlantDiseaseDetection;\nexport default PlantDiseaseDetection;\nvar _c;\n$RefreshReg$(_c, \"PlantDiseaseDetection\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","PlantDiseaseDetection","_s","videoRef","canvasRef","result","setResult","loading","setLoading","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","catch","err","console","error","alert","captureImage","context","getContext","drawImage","uploadImage","dataUrl","toDataURL","fetch","res","blob","formData","FormData","append","method","body","response","json","data","JSON","stringify","prediction","style","textAlign","marginTop","marginLeft","borderRadius","paddingTop","width","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","height","autoPlay","border","margin","onClick","padding","fontSize","cursor","id","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/adity/Desktop/Project/my-app/src/components/Camerageter.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\n\r\nconst PlantDiseaseDetection = () => {\r\n    const videoRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const [result, setResult] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video: true })\r\n            .then((stream) => {\r\n                videoRef.current.srcObject = stream;\r\n            })\r\n            .catch((err) => {\r\n                console.error(\"Error accessing the camera: \", err);\r\n                alert(\"Could not access the camera. Please allow camera permissions.\");\r\n            });\r\n    }, []);\r\n\r\n    const captureImage = () => {\r\n        const context = canvasRef.current.getContext('2d');\r\n        context.drawImage(videoRef.current, 0, 0, 320, 240);\r\n    };\r\n\r\n    const uploadImage = () => {\r\n        setLoading(true);\r\n        const dataUrl = canvasRef.current.toDataURL('image/jpeg');\r\n\r\n        fetch(dataUrl)\r\n            .then(res => res.blob())\r\n            .then(blob => {\r\n                const formData = new FormData();\r\n                formData.append('file', blob, 'plant_image.jpg');\r\n\r\n                fetch('http://10.12.37.12:8000/predict/', {\r\n                    method: 'POST',\r\n                    body: formData\r\n                })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    setLoading(false);\r\n                    setResult(`Prediction: ${JSON.stringify(data.prediction, null, 2)}`);\r\n                })\r\n                .catch(error => {\r\n                    setLoading(false);\r\n                    console.error(\"Error uploading the image or in prediction: \", error);\r\n                    setResult(\"An error occurred during image upload or prediction.\");\r\n                });\r\n            })\r\n            .catch(error => {\r\n                setLoading(false);\r\n                console.error(\"Error converting canvas to Blob: \", error);\r\n                setResult(\"An error occurred during image processing.\");\r\n            });\r\n    };\r\n    return (\r\n        <div style={{ textAlign: 'center', marginTop: '100px',marginLeft: '300px',borderRadius:\"8px\" ,paddingTop:\"20px\",width:\"800px\",backgroundColor:\"#E4F1E8\"}}>\r\n            <h1>Plant Disease Detection</h1>\r\n            <video ref={videoRef} width=\"320\" height=\"240\" autoPlay style={{ border: '1px solid #ddd', marginTop: '20px' }}></video>\r\n            <canvas ref={canvasRef} width=\"320\" height=\"240\" style={{ border: '1px solid #ddd', margin: '10px' }}></canvas><br />\r\n            <button onClick={captureImage} style={{ padding: '10px 20px', margin: '10px', fontSize: '16px', cursor: 'pointer' }}>Capture Image</button>\r\n            <button onClick={uploadImage} style={{ padding: '10px 20px', margin: '10px', fontSize: '16px', cursor: 'pointer' }}>Upload and Detect</button>\r\n            {loading && <div id=\"loading\" style={{ marginTop: '20px' }}>Processing...</div>}\r\n            <div id=\"result\" style={{ marginTop: '20px', fontWeight: 'bold' }}>{result}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PlantDiseaseDetection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}