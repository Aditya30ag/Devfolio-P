{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adity\\\\Desktop\\\\Project\\\\my-app\\\\src\\\\components\\\\Btn.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Btn = () => {\n  _s();\n  const [previewSrc, setPreviewSrc] = useState(null); // Store the image preview\n  const [prediction, setPrediction] = useState(null); // Store the prediction result\n  const [loading, setLoading] = useState(false); // Loading state while waiting for API response\n\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    if (file && file.type.startsWith('image/')) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        setPreviewSrc(e.target.result);\n      };\n      reader.readAsDataURL(file);\n      uploadImage(file); // Upload image when it is selected\n    } else {\n      setPreviewSrc(null);\n      alert('Please select a valid image file.');\n    }\n  };\n\n  // Function to upload the image to the backend API\n  const uploadImage = async file => {\n    setLoading(true); // Show loading indicator\n    const formData = new FormData();\n    formData.append('file', file); // Append the selected image\n\n    try {\n      const response = await axios.post('http://10.12.37.12/predict/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Handle the prediction response\n      setPrediction(response.data.prediction); // Assuming response contains a 'prediction' field\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      alert('An error occurred while uploading the image.');\n    } finally {\n      setLoading(false); // Hide loading indicator\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    style: {\n      margin: '20px',\n      textAlign: 'center',\n      zIndex: '40'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"imageInput\",\n      accept: \"image/*\",\n      style: {\n        display: 'none'\n      },\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upload-btn\",\n      onClick: () => document.getElementById('imageInput').click(),\n      style: {\n        display: 'inline-block',\n        padding: '10px 20px',\n        fontSize: '16px',\n        cursor: 'pointer',\n        border: '2px solid #007bff',\n        backgroundColor: '#007bff',\n        color: 'white',\n        borderRadius: '5px',\n        transition: 'background-color 0.3s, color 0.3s',\n        zIndex: '40'\n      },\n      onMouseOver: e => {\n        e.target.style.backgroundColor = 'white';\n        e.target.style.color = '#007bff';\n      },\n      onMouseOut: e => {\n        e.target.style.backgroundColor = '#007bff';\n        e.target.style.color = 'white';\n      },\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), previewSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"preview\",\n      className: \"image-preview\",\n      src: previewSrc,\n      alt: \"Image Preview\",\n      style: {\n        marginTop: '20px',\n        maxWidth: '100%',\n        height: 'auto',\n        border: '2px solid #ddd',\n        borderRadius: '5px',\n        zIndex: '40'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prediction-result\",\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Prediction Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), prediction.map((item, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `Label: ${item.label}, Confidence: ${item.score.toFixed(2)}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Btn, \"8RvmbgOgOPbaEzKgxd2rrcKzmS4=\");\n_c = Btn;\nexport default Btn;\nvar _c;\n$RefreshReg$(_c, \"Btn\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Btn","_s","previewSrc","setPreviewSrc","prediction","setPrediction","loading","setLoading","handleImageChange","event","file","target","files","type","startsWith","reader","FileReader","onload","e","result","readAsDataURL","uploadImage","alert","formData","FormData","append","response","post","headers","data","error","console","className","style","margin","textAlign","zIndex","children","id","accept","display","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","document","getElementById","click","padding","fontSize","cursor","border","backgroundColor","color","borderRadius","transition","onMouseOver","onMouseOut","src","alt","marginTop","maxWidth","height","map","item","index","label","score","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/adity/Desktop/Project/my-app/src/components/Btn.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Btn = () => {\r\n  const [previewSrc, setPreviewSrc] = useState(null); // Store the image preview\r\n  const [prediction, setPrediction] = useState(null); // Store the prediction result\r\n  const [loading, setLoading] = useState(false); // Loading state while waiting for API response\r\n\r\n  const handleImageChange = (event) => {\r\n    const file = event.target.files[0];\r\n\r\n    if (file && file.type.startsWith('image/')) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = (e) => {\r\n        setPreviewSrc(e.target.result);\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n      uploadImage(file); // Upload image when it is selected\r\n    } else {\r\n      setPreviewSrc(null);\r\n      alert('Please select a valid image file.');\r\n    }\r\n  };\r\n\r\n  // Function to upload the image to the backend API\r\n  const uploadImage = async (file) => {\r\n    setLoading(true); // Show loading indicator\r\n    const formData = new FormData();\r\n    formData.append('file', file); // Append the selected image\r\n\r\n    try {\r\n      const response = await axios.post('http://10.12.37.12/predict/', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      // Handle the prediction response\r\n      setPrediction(response.data.prediction); // Assuming response contains a 'prediction' field\r\n    } catch (error) {\r\n      console.error('Error uploading image:', error);\r\n      alert('An error occurred while uploading the image.');\r\n    } finally {\r\n      setLoading(false); // Hide loading indicator\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-container\" style={{ margin: '20px', textAlign: 'center', zIndex: '40' }}>\r\n      <input\r\n        type=\"file\"\r\n        id=\"imageInput\"\r\n        accept=\"image/*\"\r\n        style={{ display: 'none' }}\r\n        onChange={handleImageChange}\r\n      />\r\n      <button\r\n        className=\"upload-btn\"\r\n        onClick={() => document.getElementById('imageInput').click()}\r\n        style={{\r\n          display: 'inline-block',\r\n          padding: '10px 20px',\r\n          fontSize: '16px',\r\n          cursor: 'pointer',\r\n          border: '2px solid #007bff',\r\n          backgroundColor: '#007bff',\r\n          color: 'white',\r\n          borderRadius: '5px',\r\n          transition: 'background-color 0.3s, color 0.3s',\r\n          zIndex: '40',\r\n        }}\r\n        onMouseOver={(e) => {\r\n          e.target.style.backgroundColor = 'white';\r\n          e.target.style.color = '#007bff';\r\n        }}\r\n        onMouseOut={(e) => {\r\n          e.target.style.backgroundColor = '#007bff';\r\n          e.target.style.color = 'white';\r\n        }}\r\n      >\r\n        Upload Image\r\n      </button>\r\n\r\n      {/* Display the image preview */}\r\n      {previewSrc && (\r\n        <img\r\n          id=\"preview\"\r\n          className=\"image-preview\"\r\n          src={previewSrc}\r\n          alt=\"Image Preview\"\r\n          style={{\r\n            marginTop: '20px',\r\n            maxWidth: '100%',\r\n            height: 'auto',\r\n            border: '2px solid #ddd',\r\n            borderRadius: '5px',\r\n            zIndex: '40',\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {/* Loading indicator */}\r\n      {loading && <p>Loading...</p>}\r\n\r\n      {/* Display the prediction result */}\r\n      {prediction && (\r\n        <div className=\"prediction-result\" style={{ marginTop: '20px' }}>\r\n          <h3>Prediction Result:</h3>\r\n          {prediction.map((item, index) => (\r\n            <p key={index}>{`Label: ${item.label}, Confidence: ${item.score.toFixed(2)}`}</p>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Btn;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}