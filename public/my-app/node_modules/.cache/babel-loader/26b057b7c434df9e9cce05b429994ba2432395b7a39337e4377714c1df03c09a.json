{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adity\\\\voting_app\\\\public\\\\my-app\\\\src\\\\components\\\\Livecamera.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Livecamera = () => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const mediaRecorderRef = useRef(null);\n  const handleStartRecording = async () => {\n    try {\n      // Request screen capture\n      const stream = await navigator.mediaDevices.getDisplayMedia({\n        video: {\n          mediaSource: 'screen'\n        }\n      });\n\n      // Initialize MediaRecorder and store it in the ref\n      const mediaRecorder = new MediaRecorder(stream, {\n        mimeType: 'video/webm; codecs=vp9' // Use vp9 for better compression, or vp8 for compatibility\n      });\n      mediaRecorderRef.current = mediaRecorder;\n\n      // Handle data when available\n      mediaRecorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          setRecordedChunks(prev => [...prev, event.data]);\n        }\n      };\n\n      // Start recording\n      mediaRecorder.start();\n      videoRef.current.srcObject = stream;\n      setRecording(true);\n    } catch (error) {\n      console.error(\"Error starting screen recording:\", error);\n    }\n  };\n  const handleStopRecording = () => {\n    if (mediaRecorder && typeof mediaRecorder.stop === 'function') {\n      mediaRecorder.stop();\n      setRecording(false);\n    } else {\n      console.error('mediaRecorder is not initialized');\n    }\n  };\n  useEffect(() => {\n    handleStartRecording();\n  }, []);\n  const handleDownload = () => {\n    // Create a blob from recorded chunks\n    const blob = new Blob(recordedChunks, {\n      type: 'video/webm'\n    });\n    const url = URL.createObjectURL(blob);\n\n    // Create an anchor element for downloading\n    const a = document.createElement('a');\n    a.style.display = 'none';\n    a.href = url;\n    a.download = 'screen_recording.webm';\n\n    // Trigger download and clean up\n    document.body.appendChild(a);\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n  if (!localStorage.getItem('token')) {\n    handleStopRecording();\n    if (recordedChunks.length > 0) {\n      handleDownload();\n    }\n  }\n  const videoRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center gap-4 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      className: \"w-80 h-60 border-2 border-green-500\",\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Livecamera, \"/FWFQcTGZKVAShaFIbXXYnnJsVw=\");\n_c = Livecamera;\nexport default Livecamera;\nvar _c;\n$RefreshReg$(_c, \"Livecamera\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Livecamera","_s","recording","setRecording","recordedChunks","setRecordedChunks","mediaRecorderRef","handleStartRecording","stream","navigator","mediaDevices","getDisplayMedia","video","mediaSource","mediaRecorder","MediaRecorder","mimeType","current","ondataavailable","event","data","size","prev","start","videoRef","srcObject","error","console","handleStopRecording","stop","handleDownload","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","style","display","href","download","body","appendChild","click","window","revokeObjectURL","localStorage","getItem","length","className","children","ref","autoPlay","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/adity/voting_app/public/my-app/src/components/Livecamera.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst Livecamera = () => {\r\n  const [recording, setRecording] = useState(false);\r\n  const [recordedChunks, setRecordedChunks] = useState([]);\r\n  const mediaRecorderRef = useRef(null);\r\n\r\n  const handleStartRecording = async () => {\r\n    try {\r\n      // Request screen capture\r\n      const stream = await navigator.mediaDevices.getDisplayMedia({\r\n        video: { mediaSource: 'screen' },\r\n      });\r\n\r\n      // Initialize MediaRecorder and store it in the ref\r\n      const mediaRecorder = new MediaRecorder(stream, {\r\n        mimeType: 'video/webm; codecs=vp9', // Use vp9 for better compression, or vp8 for compatibility\r\n      });\r\n      mediaRecorderRef.current = mediaRecorder;\r\n\r\n      // Handle data when available\r\n      mediaRecorder.ondataavailable = (event) => {\r\n        if (event.data.size > 0) {\r\n          setRecordedChunks((prev) => [...prev, event.data]);\r\n        }\r\n      };\r\n\r\n      // Start recording\r\n      mediaRecorder.start();\r\n      videoRef.current.srcObject = stream;\r\n      setRecording(true);\r\n    } catch (error) {\r\n      console.error(\"Error starting screen recording:\", error);\r\n    }\r\n  };\r\n\r\n  const handleStopRecording = () => {\r\n    if (mediaRecorder && typeof mediaRecorder.stop === 'function') {\r\n      mediaRecorder.stop();\r\n      setRecording(false);\r\n  } else {\r\n      console.error('mediaRecorder is not initialized');\r\n  }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleStartRecording();\r\n  },[])\r\n\r\n  const handleDownload = () => {\r\n    // Create a blob from recorded chunks\r\n    const blob = new Blob(recordedChunks, { type: 'video/webm' });\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    // Create an anchor element for downloading\r\n    const a = document.createElement('a');\r\n    a.style.display = 'none';\r\n    a.href = url;\r\n    a.download = 'screen_recording.webm';\r\n\r\n    // Trigger download and clean up\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  };\r\n  if(!localStorage.getItem('token')){\r\n    handleStopRecording();\r\n    if(recordedChunks.length > 0){\r\n      handleDownload();\r\n    }\r\n  }\r\n  const videoRef = useRef(null);\r\n  \r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center gap-4 p-4\">\r\n          <video\r\n            ref={videoRef}\r\n            className=\"w-80 h-60 border-2 border-green-500\"\r\n            autoPlay\r\n          ></video>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Livecamera;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}