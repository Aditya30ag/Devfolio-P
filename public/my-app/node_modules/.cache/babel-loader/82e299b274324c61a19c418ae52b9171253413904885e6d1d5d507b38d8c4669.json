{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adity\\\\Desktop\\\\Project\\\\my-app\\\\src\\\\components\\\\Camerageter.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlantDiseaseDetection = () => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      videoRef.current.srcObject = stream;\n    }).catch(err => {\n      console.error(\"Error accessing the camera: \", err);\n      alert(\"Could not access the camera. Please allow camera permissions.\");\n    });\n  }, []);\n  const captureImage = () => {\n    const context = canvasRef.current.getContext('2d');\n    context.drawImage(videoRef.current, 0, 0, 320, 240);\n  };\n  const uploadImage = () => {\n    setLoading(true);\n    const dataUrl = canvasRef.current.toDataURL('image/jpeg');\n    fetch(dataUrl).then(res => res.blob()).then(blob => {\n      const formData = new FormData();\n      formData.append('file', blob, 'plant_image.jpg');\n      fetch('http://10.12.37.12:8000/predict/', {\n        method: 'POST',\n        body: formData\n      }).then(response => response.json()).then(data => {\n        setLoading(false);\n        if (data.prediction != Null) {\n          setResult(`Prediction: ${JSON.stringify(data.prediction[0].label, null, 2)} Accuracy: ${JSON.stringify(data.prediction[0].score, null, 2)}`);\n        } else {\n          setResult(\"Prediction: is not defined\");\n        }\n      }).catch(error => {\n        setLoading(false);\n        console.error(\"Error uploading the image or in prediction: \", error);\n        setResult(\"Please retake the picture\");\n      });\n    }).catch(error => {\n      setLoading(false);\n      console.error(\"Error converting canvas to Blob: \", error);\n      setResult(\"An error occurred during image processing.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"640px\",\n      width: \"100%\",\n      background: \"linear-gradient(360deg,#208420,white)\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '100px',\n        marginLeft: '280px',\n        borderRadius: \"8px\",\n        paddingTop: \"20px\",\n        width: \"800px\",\n        backgroundColor: \"#E4F1E8\",\n        border: \"2px solid black\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Plant Disease Detection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        width: \"320\",\n        height: \"240\",\n        autoPlay: true,\n        style: {\n          marginTop: '20px',\n          border: \"2px solid green\",\n          marginRight: \"5px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: \"320\",\n        height: \"238\",\n        style: {\n          marginTop: '20px',\n          border: \"2px solid green\",\n          marginLeft: \"5px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 143\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: captureImage,\n        style: {\n          padding: '10px 20px',\n          margin: '10px',\n          fontSize: '16px',\n          cursor: 'pointer',\n          border: \"none\",\n          backgroundColor: \"#C6F5B5\",\n          borderRadius: \"8px\"\n        },\n        children: \"Capture Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: uploadImage,\n        style: {\n          padding: '10px 20px',\n          margin: '10px',\n          fontSize: '16px',\n          cursor: 'pointer',\n          border: \"none\",\n          backgroundColor: \"#C6F5B5\",\n          borderRadius: \"8px\"\n        },\n        children: \"Upload and Detect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"loading\",\n        style: {\n          marginTop: '20px'\n        },\n        children: \"Processing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"40px\",\n        width: \"600px\",\n        backgroundColor: \"#E4F1E8\",\n        borderRadius: \"20px\",\n        border: \"2px solid black\",\n        marginTop: \"10px\",\n        marginLeft: \"380px\",\n        paddingTop: \"6px\",\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"result\",\n        style: {\n          fontWeight: 'bold'\n        },\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 195\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(PlantDiseaseDetection, \"FIbSNzvP+MY3/3TrvLgY2yKRSSw=\");\n_c = PlantDiseaseDetection;\nexport default PlantDiseaseDetection;\nvar _c;\n$RefreshReg$(_c, \"PlantDiseaseDetection\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","PlantDiseaseDetection","_s","videoRef","canvasRef","result","setResult","loading","setLoading","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","catch","err","console","error","alert","captureImage","context","getContext","drawImage","uploadImage","dataUrl","toDataURL","fetch","res","blob","formData","FormData","append","method","body","response","json","data","prediction","Null","JSON","stringify","label","score","style","height","width","background","children","textAlign","marginTop","marginLeft","borderRadius","paddingTop","backgroundColor","border","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","marginRight","onClick","padding","margin","fontSize","cursor","id","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/adity/Desktop/Project/my-app/src/components/Camerageter.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\n\r\nconst PlantDiseaseDetection = () => {\r\n    const videoRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const [result, setResult] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video: true })\r\n            .then((stream) => {\r\n                videoRef.current.srcObject = stream;\r\n            })\r\n            .catch((err) => {\r\n                console.error(\"Error accessing the camera: \", err);\r\n                alert(\"Could not access the camera. Please allow camera permissions.\");\r\n            });\r\n    }, []);\r\n\r\n    const captureImage = () => {\r\n        const context = canvasRef.current.getContext('2d');\r\n        context.drawImage(videoRef.current, 0, 0, 320, 240);\r\n    };\r\n\r\n    const uploadImage = () => {\r\n        setLoading(true);\r\n        const dataUrl = canvasRef.current.toDataURL('image/jpeg');\r\n\r\n        fetch(dataUrl)\r\n            .then(res => res.blob())\r\n            .then(blob => {\r\n                const formData = new FormData();\r\n                formData.append('file', blob, 'plant_image.jpg');\r\n\r\n                fetch('http://10.12.37.12:8000/predict/', {\r\n                    method: 'POST',\r\n                    body: formData\r\n                })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    setLoading(false);\r\n                    if(data.prediction!=Null){\r\n                        setResult(`Prediction: ${JSON.stringify(data.prediction[0].label, null, 2)} Accuracy: ${JSON.stringify(data.prediction[0].score, null, 2)}`);\r\n                    }else{\r\n                        setResult(\"Prediction: is not defined\");\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    setLoading(false);\r\n                    console.error(\"Error uploading the image or in prediction: \", error);\r\n                    setResult(\"Please retake the picture\");\r\n                });\r\n            })\r\n            .catch(error => {\r\n                setLoading(false);\r\n                console.error(\"Error converting canvas to Blob: \", error);\r\n                setResult(\"An error occurred during image processing.\");\r\n            });\r\n    };\r\n    return (\r\n        <div style={{ height:\"640px\",width:\"100%\",background:\"linear-gradient(360deg,#208420,white)\"}}>\r\n        <div style={{ textAlign: 'center', marginTop: '100px',marginLeft: '280px',borderRadius:\"8px\" ,paddingTop:\"20px\",width:\"800px\",backgroundColor:\"#E4F1E8\",border:\"2px solid black\"}}>\r\n            <h1>Plant Disease Detection</h1>\r\n            <video ref={videoRef} width=\"320\" height=\"240\" autoPlay style={{ marginTop: '20px',border:\"2px solid green\",marginRight:\"5px\"}}></video>\r\n            <canvas ref={canvasRef} width=\"320\" height=\"238\" style={{ marginTop: '20px',border:\"2px solid green\",marginLeft:\"5px\" }}></canvas><br />\r\n            <button onClick={captureImage} style={{ padding: '10px 20px', margin: '10px', fontSize: '16px', cursor: 'pointer', border:\"none\",backgroundColor:\"#C6F5B5\",borderRadius:\"8px\"}}>Capture Image</button>\r\n            <button onClick={uploadImage} style={{ padding: '10px 20px', margin: '10px', fontSize: '16px', cursor: 'pointer',border:\"none\",backgroundColor:\"#C6F5B5\",borderRadius:\"8px\"}}>Upload and Detect</button>\r\n            {loading && <div id=\"loading\" style={{ marginTop: '20px' }}>Processing...</div>}\r\n        </div>\r\n        <div style={{height:\"40px\",width:\"600px\",backgroundColor:\"#E4F1E8\",borderRadius:\"20px\",border:\"2px solid black\",marginTop:\"10px\",marginLeft:\"380px\",paddingTop:\"6px\",textAlign:\"center\"}}><div id=\"result\" style={{ fontWeight: 'bold' }}>{result}</div></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PlantDiseaseDetection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}